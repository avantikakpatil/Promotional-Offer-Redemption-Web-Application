// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("backend.Models.Campaign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RewardType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("UpdatedAt"));

                    b.Property<int?>("VoucherGenerationThreshold")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherValidityDays")
                        .HasColumnType("int");

                    b.Property<decimal?>("VoucherValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IsActive")
                        .HasDatabaseName("IX_Campaigns_IsActive");

                    b.HasIndex("ManufacturerId")
                        .HasDatabaseName("IX_Campaigns_ManufacturerId");

                    b.HasIndex("ProductType")
                        .HasDatabaseName("IX_Campaigns_ProductType");

                    b.HasIndex("StartDate", "EndDate")
                        .HasDatabaseName("IX_Campaigns_DateRange");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("backend.Models.CampaignEligibleProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int>("CampaignProductId")
                        .HasColumnType("int");

                    b.Property<int?>("FreeProductId")
                        .HasColumnType("int");

                    b.Property<int?>("FreeProductQty")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("MinPurchaseQuantity")
                        .HasColumnType("int");

                    b.Property<int>("PointCost")
                        .HasColumnType("int");

                    b.Property<int?>("RedemptionLimit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CampaignProductId");

                    b.HasIndex("FreeProductId");

                    b.ToTable("CampaignEligibleProducts");
                });

            modelBuilder.Entity("backend.Models.CampaignFreeProductReward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("ProductId");

                    b.ToTable("CampaignFreeProductRewards");
                });

            modelBuilder.Entity("backend.Models.CampaignPoints", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AvailablePoints")
                        .HasColumnType("int");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<DateTime?>("LastVoucherGeneratedAt")
                        .HasColumnType("timestamp(6)");

                    b.Property<int>("PointsUsedForVouchers")
                        .HasColumnType("int");

                    b.Property<int>("ResellerId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalOrderValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalOrders")
                        .HasColumnType("int");

                    b.Property<int>("TotalPointsEarned")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalVoucherValueGenerated")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalVouchersGenerated")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp(6)");

                    b.HasKey("Id");

                    b.HasIndex("ResellerId");

                    b.HasIndex("CampaignId", "ResellerId")
                        .IsUnique()
                        .HasDatabaseName("IX_CampaignPoints_CampaignId_ResellerId");

                    b.ToTable("CampaignPoints");
                });

            modelBuilder.Entity("backend.Models.CampaignProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Brand")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PointsPerUnit")
                        .HasColumnType("int");

                    b.Property<string>("SKU")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("campaignproducts", (string)null);
                });

            modelBuilder.Entity("backend.Models.CampaignReseller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("timestamp(6)");

                    b.Property<int?>("ApprovedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastVoucherGeneratedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PointsUsedForVouchers")
                        .HasColumnType("int");

                    b.Property<int>("ResellerId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalOrderValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalPointsEarned")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalVoucherValueGenerated")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("TotalVouchersGenerated")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp(6)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovedByUserId");

                    b.HasIndex("ResellerId");

                    b.HasIndex("CampaignId", "ResellerId")
                        .IsUnique()
                        .HasDatabaseName("IX_CampaignResellers_CampaignId_ResellerId");

                    b.ToTable("CampaignResellers");
                });

            modelBuilder.Entity("backend.Models.CampaignVoucherProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("VoucherValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("ProductId");

                    b.ToTable("CampaignVoucherProducts");
                });

            modelBuilder.Entity("backend.Models.FreeProductVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("EligibleProductId")
                        .HasColumnType("int");

                    b.Property<int>("FreeProductId")
                        .HasColumnType("int");

                    b.Property<int>("FreeProductQty")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("ResellerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("ResellerId");

                    b.ToTable("FreeProductVouchers");
                });

            modelBuilder.Entity("backend.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Brand")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PointsPerUnit")
                        .HasColumnType("int");

                    b.Property<decimal>("ResellerPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RetailPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SKU")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("Category")
                        .HasDatabaseName("IX_Products_Category");

                    b.HasIndex("ManufacturerId")
                        .HasDatabaseName("IX_Products_ManufacturerId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("backend.Models.RedemptionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("RedeemedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("RedeemedProducts")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("RedemptionType")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("RedemptionValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ResellerId")
                        .HasColumnType("int");

                    b.Property<int?>("ShopkeeperId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("ResellerId");

                    b.HasIndex("ShopkeeperId");

                    b.HasIndex("UserId");

                    b.HasIndex("VoucherId");

                    b.ToTable("RedemptionHistories");
                });

            modelBuilder.Entity("backend.Models.RewardTier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Reward")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Threshold")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("RewardTiers");
                });

            modelBuilder.Entity("backend.Models.TempOrderPoints", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ApprovedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DeliveredAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("OrderNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("ResellerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ShippedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ShippingAddress")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalPointsEarned")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("ResellerId");

                    b.ToTable("TempOrderPoints");
                });

            modelBuilder.Entity("backend.Models.TempOrderPointsItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EligibleProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("TempOrderPointsId")
                        .HasColumnType("int");

                    b.Property<int?>("TempOrderPointsId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TempOrderPointsId");

                    b.HasIndex("TempOrderPointsId1");

                    b.ToTable("TempOrderPointsItems");
                });

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssignedManufacturerId")
                        .HasColumnType("int");

                    b.Property<int?>("AssignedResellerId")
                        .HasColumnType("int");

                    b.Property<string>("BusinessAddress")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("BusinessLicense")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("GSTNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)");

                    MySqlPropertyBuilderExtensions.UseMySqlComputedColumn(b.Property<DateTime?>("UpdatedAt"));

                    b.HasKey("Id");

                    b.HasIndex("AssignedManufacturerId");

                    b.HasIndex("AssignedResellerId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("backend.Models.UserPoints", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<int>("RedeemedPoints")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserPoints");
                });

            modelBuilder.Entity("backend.Models.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP(6)");

                    b.Property<string>("EligibleProducts")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("timestamp(6)");

                    b.Property<bool>("IsRedeemed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PointsRequired")
                        .HasColumnType("int");

                    b.Property<string>("QrCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("RedeemedAt")
                        .HasColumnType("timestamp(6)");

                    b.Property<int?>("RedeemedByShopkeeperId")
                        .HasColumnType("int");

                    b.Property<int>("ResellerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VoucherCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("RedeemedByShopkeeperId");

                    b.HasIndex("ResellerId")
                        .HasDatabaseName("IX_Vouchers_ResellerId");

                    b.HasIndex("VoucherCode")
                        .IsUnique()
                        .HasDatabaseName("IX_Vouchers_VoucherCode");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("backend.Models.Campaign", b =>
                {
                    b.HasOne("backend.Models.User", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("backend.Models.CampaignEligibleProduct", b =>
                {
                    b.HasOne("backend.Models.Campaign", "Campaign")
                        .WithMany("EligibleProducts")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.CampaignProduct", "CampaignProduct")
                        .WithMany()
                        .HasForeignKey("CampaignProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Product", "FreeProduct")
                        .WithMany()
                        .HasForeignKey("FreeProductId");

                    b.Navigation("Campaign");

                    b.Navigation("CampaignProduct");

                    b.Navigation("FreeProduct");
                });

            modelBuilder.Entity("backend.Models.CampaignFreeProductReward", b =>
                {
                    b.HasOne("backend.Models.Campaign", "Campaign")
                        .WithMany("FreeProductRewards")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("backend.Models.CampaignPoints", b =>
                {
                    b.HasOne("backend.Models.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.User", "Reseller")
                        .WithMany()
                        .HasForeignKey("ResellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Reseller");
                });

            modelBuilder.Entity("backend.Models.CampaignReseller", b =>
                {
                    b.HasOne("backend.Models.User", "ApprovedBy")
                        .WithMany()
                        .HasForeignKey("ApprovedByUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("backend.Models.Campaign", "Campaign")
                        .WithMany("CampaignResellers")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.User", "Reseller")
                        .WithMany()
                        .HasForeignKey("ResellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovedBy");

                    b.Navigation("Campaign");

                    b.Navigation("Reseller");
                });

            modelBuilder.Entity("backend.Models.CampaignVoucherProduct", b =>
                {
                    b.HasOne("backend.Models.Campaign", "Campaign")
                        .WithMany("VoucherProducts")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("backend.Models.FreeProductVoucher", b =>
                {
                    b.HasOne("backend.Models.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.User", "Reseller")
                        .WithMany()
                        .HasForeignKey("ResellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Reseller");
                });

            modelBuilder.Entity("backend.Models.Product", b =>
                {
                    b.HasOne("backend.Models.User", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("backend.Models.RedemptionHistory", b =>
                {
                    b.HasOne("backend.Models.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId");

                    b.HasOne("backend.Models.User", "Reseller")
                        .WithMany()
                        .HasForeignKey("ResellerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("backend.Models.User", "Shopkeeper")
                        .WithMany()
                        .HasForeignKey("ShopkeeperId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("backend.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Voucher", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Campaign");

                    b.Navigation("Reseller");

                    b.Navigation("Shopkeeper");

                    b.Navigation("User");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("backend.Models.RewardTier", b =>
                {
                    b.HasOne("backend.Models.Campaign", "Campaign")
                        .WithMany("RewardTiers")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("backend.Models.TempOrderPoints", b =>
                {
                    b.HasOne("backend.Models.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("backend.Models.User", "Reseller")
                        .WithMany()
                        .HasForeignKey("ResellerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Reseller");
                });

            modelBuilder.Entity("backend.Models.TempOrderPointsItem", b =>
                {
                    b.HasOne("backend.Models.TempOrderPoints", "TempOrderPoints")
                        .WithMany()
                        .HasForeignKey("TempOrderPointsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.TempOrderPoints", null)
                        .WithMany("Items")
                        .HasForeignKey("TempOrderPointsId1");

                    b.Navigation("TempOrderPoints");
                });

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.HasOne("backend.Models.User", "AssignedManufacturer")
                        .WithMany("AssignedResellers")
                        .HasForeignKey("AssignedManufacturerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("backend.Models.User", "AssignedReseller")
                        .WithMany("AssignedShopkeepers")
                        .HasForeignKey("AssignedResellerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AssignedManufacturer");

                    b.Navigation("AssignedReseller");
                });

            modelBuilder.Entity("backend.Models.UserPoints", b =>
                {
                    b.HasOne("backend.Models.User", "User")
                        .WithOne("UserPoints")
                        .HasForeignKey("backend.Models.UserPoints", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("backend.Models.Voucher", b =>
                {
                    b.HasOne("backend.Models.Campaign", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.User", "RedeemedByShopkeeper")
                        .WithMany()
                        .HasForeignKey("RedeemedByShopkeeperId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("backend.Models.User", "Reseller")
                        .WithMany()
                        .HasForeignKey("ResellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("RedeemedByShopkeeper");

                    b.Navigation("Reseller");
                });

            modelBuilder.Entity("backend.Models.Campaign", b =>
                {
                    b.Navigation("CampaignResellers");

                    b.Navigation("EligibleProducts");

                    b.Navigation("FreeProductRewards");

                    b.Navigation("RewardTiers");

                    b.Navigation("VoucherProducts");
                });

            modelBuilder.Entity("backend.Models.TempOrderPoints", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("backend.Models.User", b =>
                {
                    b.Navigation("AssignedResellers");

                    b.Navigation("AssignedShopkeepers");

                    b.Navigation("UserPoints")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
